name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, release ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  android:
    runs-on: ubuntu-latest
    environment: i8104

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 10.x

      - name: Decrypt files
        env:
          ENCRYPTED_FILE_KEY: ${{ secrets.ENCRYPTED_FILE_KEY }}
          ENCRYPTED_FILE_IV: ${{ secrets.ENCRYPTED_FILE_IV }}
        run: |
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/environment.prod.ts.enc -out src/environments/environment.prod.ts -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/service_account.json.enc -out src/assets/data/service_account.json -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/aircraft.jpg.enc -out src/assets/img/aircraft.jpg -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in android/dist/i8104/environment.gradle.enc -out android/environment.gradle -d

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli
      - name: Install dependencies
        run: npm ci

      - name: Build Ionic app
        run: ionic build --prod
      - name: Sync Ionic with Android app
        run: ionic cap sync android --prod
      - name: Build Android app
        run: |
          cd android
          ./gradlew clean build

      - name: Prepare for deploy
        if: github.ref == 'refs/heads/release'
        env:
          ENCRYPTED_FILE_KEY: ${{ secrets.ENCRYPTED_FILE_KEY }}
          ENCRYPTED_FILE_IV: ${{ secrets.ENCRYPTED_FILE_IV }}
        run: |
          cd android
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in dist/i8104/googleplay-developer-key.json.enc -out dist/i8104/googleplay-developer-key.json -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in dist/i8104/androidkey.jks.enc -out dist/i8104/androidkey.jks -d

      - name: Setup Ruby environment
        if: github.ref == 'refs/heads/release'
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Install Fastlane
        if: github.ref == 'refs/heads/release'
        run: gem install fastlane -N

      - name: Deploy to Google Play
        if: github.ref == 'refs/heads/release'
        env:
          APP_IDENTIFIER: 'it.casaricci.airborne.i8104'
          GOOGLE_PLAY_CREDENTIALS: 'dist/i8104/googleplay-developer-key.json'
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          cd android
          fastlane deploy_i8104

  ios:
    runs-on: macos-10.15
    environment: i8104

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 10.x

      - name: Decrypt files
        env:
          ENCRYPTED_FILE_KEY: ${{ secrets.ENCRYPTED_FILE_KEY }}
          ENCRYPTED_FILE_IV: ${{ secrets.ENCRYPTED_FILE_IV }}
        run: |
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/environment.prod.ts.enc -out src/environments/environment.prod.ts -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/service_account.json.enc -out src/assets/data/service_account.json -d
          openssl aes-256-cbc -K $ENCRYPTED_FILE_KEY -iv $ENCRYPTED_FILE_IV -in deploy/i8104/aircraft.jpg.enc -out src/assets/img/aircraft.jpg -d

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli
      - name: Install dependencies
        run: npm ci

      - name: Build Ionic app
        run: ionic build --prod
      - name: Sync Ionic with iOS app
        run: ionic cap sync ios --prod
      - name: Build iOS app
        # TODO use generic scheme "Release" (not shared currently)
        run: |
          cd ios
          xcodebuild build -workspace App/App.xcworkspace -scheme "Release (I-8104)" -destination "platform=iOS Simulator,OS=14.2,name=iPhone 11" -sdk iphonesimulator14.2 CODE_SIGNING_REQUIRED=NO

      - name: Prepare for deploy
        if: github.ref == 'refs/heads/release'
        env:
          ENCRYPTED_FILE_KEY: ${{ secrets.ENCRYPTED_FILE_KEY }}
          ENCRYPTED_FILE_IV: ${{ secrets.ENCRYPTED_FILE_IV }}
        run: |
          cd ios
        # TODO some stuff to do?

      - name: Setup Ruby environment
        if: github.ref == 'refs/heads/release'
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Install Fastlane
        if: github.ref == 'refs/heads/release'
        run: gem install fastlane -N

      - name: Deploy to TestFlight
        if: github.ref == 'refs/heads/release'
        env:
          APP_IDENTIFIER: 'it.casaricci.airborne.i8104'
        run: |
          cd ios
          fastlane deploy_i8104
